akka {
    loglevel=INFO,
    loggers = ["Akka.Logger.Serilog.SerilogLogger, Akka.Logger.Serilog"],
    actor {
		debug {
			receive = on
			autoreceive = on
			lifecycle = on
			event-stream = on
			unhandled = on
		}       
		serializers {
			hyperion = "Akka.Serialization.HyperionSerializer, Akka.Serialization.Hyperion"
		}
		serialization-bindings {
			"System.Object" = hyperion
		}
    }

    persistence {
		journal {
			plugin = "akka.persistence.journal.sql-server"
			sql-server {
					class = "Akka.Persistence.SqlServer.Journal.SqlServerJournal, Akka.Persistence.SqlServer"
					plugin-dispatcher = "akka.actor.default-dispatcher"

					# connection string used for database access
					connection-string = "Data Source=(local); Initial Catalog=GameConsoleAkka; Integrated Security=True;Application Name=Game Console"

					# default sql timeout
					connection-timeout = 30s

					# sql server schema name
					schema-name = dbo

					# persistent journal table name
					table-name = EventJournal

					# initialize journal table automatically
					auto-initialize = on

					timestamp-provider = "Akka.Persistence.Sql.Common.Journal.DefaultTimestampProvider, Akka.Persistence.Sql.Common"
					metadata-table-name = Metadata
			}
        }

		snapshot-store {
			plugin = "akka.persistence.snapshot-store.sql-server"
			sql-server {
				class = "Akka.Persistence.SqlServer.Snapshot.SqlServerSnapshotStore, Akka.Persistence.SqlServer"
				plugin-dispatcher = "akka.actor.default-dispatcher"
				table-name = SnapshotStore
				schema-name = dbo
				auto-initialize = on
				connection-string = "Data Source=(local); Initial Catalog=GameConsoleAkka; Integrated Security=True;Application Name=Game Console"
			}
		}
    }
}